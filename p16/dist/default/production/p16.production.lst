

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Sep 03 12:30:12 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000E                     	;# 
    29  000E                     	;# 
    30  000F                     	;# 
    31  0010                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0015                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0017                     	;# 
    38  0018                     	;# 
    39  0019                     	;# 
    40  001A                     	;# 
    41  001F                     	;# 
    42  0081                     	;# 
    43  0085                     	;# 
    44  0086                     	;# 
    45  008C                     	;# 
    46  008E                     	;# 
    47  0092                     	;# 
    48  0098                     	;# 
    49  0099                     	;# 
    50  009A                     	;# 
    51  009B                     	;# 
    52  009C                     	;# 
    53  009D                     	;# 
    54  009F                     	;# 
    55  001F                     _CMCONbits	set	31
    56  000B                     _INTCONbits	set	11
    57  000C                     _PIR1bits	set	12
    58  0001                     _TMR0	set	1
    59  00FC                     _C1INV	set	252
    60  00FE                     _C1OUT	set	254
    61  0066                     _CMIF	set	102
    62  005F                     _GIE	set	95
    63  002C                     _RA4	set	44
    64  002E                     _RA6	set	46
    65  0032                     _RB2	set	50
    66  0033                     _RB3	set	51
    67  0034                     _RB4	set	52
    68  0035                     _RB5	set	53
    69  0036                     _RB6	set	54
    70  005A                     _T0IF	set	90
    71  0081                     _OPTION_REGbits	set	129
    72  008C                     _PIE1bits	set	140
    73  0085                     _TRISAbits	set	133
    74  0086                     _TRISBbits	set	134
    75  009F                     _VRCONbits	set	159
    76                           
    77                           	psect	text0
    78  0000                     __ptext0:	
    79                           ; #config settings
    80                           
    81                           
    82                           ;psect for function _isr
    83  0000                     
    84                           	psect	cinit
    85  0011                     start_initialization:	
    86  0011                     __initialization:	
    87                           
    88                           ; Clear objects allocated to COMMON
    89  0011  01F5               	clrf	__pbssCOMMON& (0+127)
    90  0012  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
    91  0013  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
    92  0014                     end_of_initialization:	
    93                           ;End of C runtime variable initialization code
    94                           
    95  0014                     __end_of__initialization:	
    96  0014  0183               	clrf	3
    97  0015  2859               	ljmp	_main	;jump to C main() function
    98                           
    99                           	psect	bssCOMMON
   100  0075                     __pbssCOMMON:	
   101  0075                     isr@tempo1:	
   102  0075                     	ds	2
   103  0077                     _flag:	
   104  0077                     	ds	1
   105                           
   106                           	psect	cstackCOMMON
   107  0070                     __pcstackCOMMON:	
   108  0070                     ?_controle_mosfet:	
   109  0070                     ?_monitor_fase:	
   110                           ; 0 bytes @ 0x0
   111                           
   112  0070                     ?_conf_mod_ref:	
   113                           ; 0 bytes @ 0x0
   114                           
   115  0070                     ?_conf_ao_barra:	
   116                           ; 0 bytes @ 0x0
   117                           
   118  0070                     ?_conf_timer0:	
   119                           ; 0 bytes @ 0x0
   120                           
   121  0070                     ?_isr:	
   122                           ; 0 bytes @ 0x0
   123                           
   124  0070                     ??_isr:	
   125                           ; 0 bytes @ 0x0
   126                           
   127  0070                     ?_main:	
   128                           ; 0 bytes @ 0x0
   129                           
   130                           
   131                           ; 2 bytes @ 0x0
   132  0070                     	ds	5
   133  0075                     ??_monitor_fase:	
   134  0075                     ??_conf_mod_ref:	
   135                           ; 0 bytes @ 0x5
   136                           
   137  0075                     ??_conf_ao_barra:	
   138                           ; 0 bytes @ 0x5
   139                           
   140  0075                     ??_conf_timer0:	
   141                           ; 0 bytes @ 0x5
   142                           
   143                           
   144                           	psect	cstackBANK0
   145  0020                     __pcstackBANK0:	
   146                           ; 0 bytes @ 0x5
   147                           
   148  0020                     ??_controle_mosfet:	
   149                           
   150                           ; 0 bytes @ 0x0
   151  0020                     	ds	2
   152  0022                     ??_main:	
   153                           
   154                           ; 0 bytes @ 0x2
   155  0022                     	ds	3
   156                           
   157                           	psect	maintext
   158  0059                     __pmaintext:	
   159 ;;
   160 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   161 ;;
   162 ;; *************** function _main *****************
   163 ;; Defined at:
   164 ;;		line 262 in file "main.c"
   165 ;; Parameters:    Size  Location     Type
   166 ;;		None
   167 ;; Auto vars:     Size  Location     Type
   168 ;;		None
   169 ;; Return value:  Size  Location     Type
   170 ;;                  2   79[COMMON] int 
   171 ;; Registers used:
   172 ;;		wreg, status,2, status,0, pclath, cstack
   173 ;; Tracked objects:
   174 ;;		On entry : 17F/0
   175 ;;		On exit  : 0/0
   176 ;;		Unchanged: 0/0
   177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   178 ;;      Params:         0       0       0       0
   179 ;;      Locals:         0       0       0       0
   180 ;;      Temps:          0       3       0       0
   181 ;;      Totals:         0       3       0       0
   182 ;;Total ram usage:        3 bytes
   183 ;; Hardware stack levels required when called:    3
   184 ;; This function calls:
   185 ;;		_conf_ao_barra
   186 ;;		_conf_timer0
   187 ;;		_controle_mosfet
   188 ;;		_monitor_fase
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           
   195                           ;psect for function _main
   196  0059                     _main:	
   197                           
   198                           ;main.c: 264: {TRISBbits.TRISB3=0; RB3=0;};
   199                           
   200                           ;incstack = 0
   201                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   202  0059  1683               	bsf	3,5	;RP0=1, select bank1
   203  005A  1303               	bcf	3,6	;RP1=0, select bank1
   204  005B  1186               	bcf	6,3	;volatile
   205  005C  1283               	bcf	3,5	;RP0=0, select bank0
   206  005D  1303               	bcf	3,6	;RP1=0, select bank0
   207  005E  1186               	bcf	6,3	;volatile
   208                           
   209                           ;main.c: 265: conf_ao_barra();
   210  005F  20C7               	fcall	_conf_ao_barra
   211                           
   212                           ;main.c: 266: {TRISBbits.TRISB5=0; TRISBbits.TRISB4=0; RB5=0; RB4=0;};
   213  0060  1683               	bsf	3,5	;RP0=1, select bank1
   214  0061  1303               	bcf	3,6	;RP1=0, select bank1
   215  0062  1286               	bcf	6,5	;volatile
   216  0063  1206               	bcf	6,4	;volatile
   217  0064  1283               	bcf	3,5	;RP0=0, select bank0
   218  0065  1303               	bcf	3,6	;RP1=0, select bank0
   219  0066  1286               	bcf	6,5	;volatile
   220  0067  1206               	bcf	6,4	;volatile
   221                           
   222                           ;main.c: 267: {TRISBbits.TRISB2 = 0;};
   223  0068  1683               	bsf	3,5	;RP0=1, select bank1
   224  0069  1303               	bcf	3,6	;RP1=0, select bank1
   225  006A  1106               	bcf	6,2	;volatile
   226                           
   227                           ;main.c: 268: {TRISAbits.TRISA6=1;};
   228  006B  1705               	bsf	5,6	;volatile
   229                           
   230                           ;main.c: 269: {TRISBbits.TRISB6=0; RB6=0; TRISAbits.TRISA4=1;};
   231  006C  1306               	bcf	6,6	;volatile
   232  006D  1283               	bcf	3,5	;RP0=0, select bank0
   233  006E  1303               	bcf	3,6	;RP1=0, select bank0
   234  006F  1306               	bcf	6,6	;volatile
   235  0070  1683               	bsf	3,5	;RP0=1, select bank1
   236  0071  1303               	bcf	3,6	;RP1=0, select bank1
   237  0072  1605               	bsf	5,4	;volatile
   238                           
   239                           ;main.c: 270: conf_timer0();
   240  0073  20DC               	fcall	_conf_timer0
   241                           
   242                           ;main.c: 275: {GIE = 1;};
   243  0074  178B               	bsf	11,7	;volatile
   244                           
   245                           ;main.c: 278: monitor_fase();
   246  0075  20F3               	fcall	_monitor_fase
   247                           
   248                           ;main.c: 281: {RB2 = 1;};
   249  0076  1283               	bcf	3,5	;RP0=0, select bank0
   250  0077  1303               	bcf	3,6	;RP1=0, select bank0
   251  0078  1506               	bsf	6,2	;volatile
   252                           
   253                           ;main.c: 285: {RB4=1;};
   254  0079  1606               	bsf	6,4	;volatile
   255                           
   256                           ;main.c: 286: _delay((unsigned long)((100)*(4000000/4000000.0)));
   257  007A  3021               	movlw	33
   258  007B  00A2               	movwf	??_main
   259  007C                     u157:	
   260  007C  0BA2               	decfsz	??_main,f
   261  007D  287C               	goto	u157
   262                           
   263                           ;main.c: 287: {RB4=0;};
   264  007E  1283               	bcf	3,5	;RP0=0, select bank0
   265  007F  1303               	bcf	3,6	;RP1=0, select bank0
   266  0080  1206               	bcf	6,4	;volatile
   267                           
   268                           ;main.c: 290: {RB3=1;};
   269  0081  1586               	bsf	6,3	;volatile
   270                           
   271                           ;main.c: 291: _delay((unsigned long)((1000)*(4000000/4000.0)));
   272  0082  3006               	movlw	6
   273  0083  00A4               	movwf	??_main+2
   274  0084  3013               	movlw	19
   275  0085  00A3               	movwf	??_main+1
   276  0086  30B1               	movlw	177
   277  0087  00A2               	movwf	??_main
   278  0088                     u167:	
   279  0088  0BA2               	decfsz	??_main,f
   280  0089  2888               	goto	u167
   281  008A  0BA3               	decfsz	??_main+1,f
   282  008B  2888               	goto	u167
   283  008C  0BA4               	decfsz	??_main+2,f
   284  008D  2888               	goto	u167
   285  008E  288F               	nop2
   286                           
   287                           ;main.c: 292: {RB3=0;};
   288  008F  1283               	bcf	3,5	;RP0=0, select bank0
   289  0090  1303               	bcf	3,6	;RP1=0, select bank0
   290  0091  1186               	bcf	6,3	;volatile
   291  0092                     l80:	
   292                           ;main.c: 294: while (1) {
   293                           
   294                           
   295                           ;main.c: 295: controle_mosfet();
   296  0092  2094               	fcall	_controle_mosfet
   297  0093  2892               	goto	l80
   298  0094                     __end_of_main:	
   299                           ;main.c: 296: }
   300                           ;main.c: 298: return 0;
   301                           ;	Return value of _main is never used
   302                           
   303                           
   304                           	psect	text1
   305  00F3                     __ptext1:	
   306 ;; *************** function _monitor_fase *****************
   307 ;; Defined at:
   308 ;;		line 145 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;		None               void
   315 ;; Registers used:
   316 ;;		wreg
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   322 ;;      Params:         0       0       0       0
   323 ;;      Locals:         0       0       0       0
   324 ;;      Temps:          0       0       0       0
   325 ;;      Totals:         0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels used:    1
   328 ;; Hardware stack levels required when called:    1
   329 ;; This function calls:
   330 ;;		Nothing
   331 ;; This function is called by:
   332 ;;		_main
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           
   337                           ;psect for function _monitor_fase
   338  00F3                     _monitor_fase:	
   339                           
   340                           ;main.c: 146: if (RA4 == 1) {
   341                           
   342                           ;incstack = 0
   343                           ; Regs used in _monitor_fase: [wreg]
   344  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   345  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   346  00F5  1E05               	btfss	5,4	;volatile
   347  00F6  0008               	return
   348                           
   349                           ;main.c: 147: {RB6=~RB6;};
   350  00F7  3040               	movlw	64
   351  00F8  0686               	xorwf	6,f
   352  00F9  0008               	return
   353  00FA                     __end_of_monitor_fase:	
   354                           
   355                           	psect	text2
   356  0094                     __ptext2:	
   357 ;; *************** function _controle_mosfet *****************
   358 ;; Defined at:
   359 ;;		line 119 in file "main.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;		None
   364 ;; Return value:  Size  Location     Type
   365 ;;		None               void
   366 ;; Registers used:
   367 ;;		wreg, status,2, status,0
   368 ;; Tracked objects:
   369 ;;		On entry : 0/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   373 ;;      Params:         0       0       0       0
   374 ;;      Locals:         0       0       0       0
   375 ;;      Temps:          0       2       0       0
   376 ;;      Totals:         0       2       0       0
   377 ;;Total ram usage:        2 bytes
   378 ;; Hardware stack levels used:    1
   379 ;; Hardware stack levels required when called:    1
   380 ;; This function calls:
   381 ;;		Nothing
   382 ;; This function is called by:
   383 ;;		_main
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           
   388                           ;psect for function _controle_mosfet
   389  0094                     _controle_mosfet:	
   390                           
   391                           ;main.c: 121: if((flag & (1<<1<<0)) && RA6 == 0){
   392                           
   393                           ;incstack = 0
   394                           ; Regs used in _controle_mosfet: [wreg+status,2+status,0]
   395  0094  1CF7               	btfss	_flag,1	;volatile
   396  0095  289E               	goto	l702
   397  0096  1283               	bcf	3,5	;RP0=0, select bank0
   398  0097  1303               	bcf	3,6	;RP1=0, select bank0
   399  0098  1B05               	btfsc	5,6	;volatile
   400  0099  289E               	goto	l702
   401                           
   402                           ;main.c: 122: {flag &= ~(1<<1<<0);};
   403  009A  30FD               	movlw	253
   404  009B  00A0               	movwf	??_controle_mosfet
   405  009C  0820               	movf	??_controle_mosfet,w
   406  009D  05F7               	andwf	_flag,f	;volatile
   407  009E                     l702:	
   408                           
   409                           ;main.c: 123: }
   410                           ;main.c: 125: if(RA6 == 1 && !(flag & (1<<1<<0))){
   411  009E  1283               	bcf	3,5	;RP0=0, select bank0
   412  009F  1303               	bcf	3,6	;RP1=0, select bank0
   413  00A0  1F05               	btfss	5,6	;volatile
   414  00A1  0008               	return
   415  00A2  18F7               	btfsc	_flag,1	;volatile
   416  00A3  0008               	return
   417                           
   418                           ;main.c: 126: {flag |= (1<<1<<0);};
   419  00A4  14F7               	bsf	_flag,1	;volatile
   420                           
   421                           ;main.c: 128: {RB5=1;};
   422  00A5  1686               	bsf	6,5	;volatile
   423                           
   424                           ;main.c: 129: _delay((unsigned long)((10000)*(4000000/4000000.0)));
   425  00A6  300D               	movlw	13
   426  00A7  00A1               	movwf	??_controle_mosfet+1
   427  00A8  30FB               	movlw	251
   428  00A9  00A0               	movwf	??_controle_mosfet
   429  00AA                     u177:	
   430  00AA  0BA0               	decfsz	??_controle_mosfet,f
   431  00AB  28AA               	goto	u177
   432  00AC  0BA1               	decfsz	??_controle_mosfet+1,f
   433  00AD  28AA               	goto	u177
   434  00AE  28AF               	nop2
   435                           
   436                           ;main.c: 130: {RB5=0;};
   437  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   438  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   439  00B1  1286               	bcf	6,5	;volatile
   440                           
   441                           ;main.c: 131: _delay((unsigned long)((30)*(4000000/4000000.0)));
   442  00B2  3009               	movlw	9
   443  00B3  00A0               	movwf	??_controle_mosfet
   444  00B4                     u187:	
   445  00B4  0BA0               	decfsz	??_controle_mosfet,f
   446  00B5  28B4               	goto	u187
   447  00B6  28B7               	nop2	;nop
   448                           
   449                           ;main.c: 132: {RB4=1;};
   450  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   451  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   452  00B9  1606               	bsf	6,4	;volatile
   453                           
   454                           ;main.c: 133: _delay((unsigned long)((50000)*(4000000/4000000.0)));
   455  00BA  3041               	movlw	65
   456  00BB  00A1               	movwf	??_controle_mosfet+1
   457  00BC  30EE               	movlw	238
   458  00BD  00A0               	movwf	??_controle_mosfet
   459  00BE                     u197:	
   460  00BE  0BA0               	decfsz	??_controle_mosfet,f
   461  00BF  28BE               	goto	u197
   462  00C0  0BA1               	decfsz	??_controle_mosfet+1,f
   463  00C1  28BE               	goto	u197
   464  00C2  0000               	nop
   465                           
   466                           ;main.c: 134: {RB4=0;};
   467  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   468  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   469  00C5  1206               	bcf	6,4	;volatile
   470  00C6  0008               	return
   471  00C7                     __end_of_controle_mosfet:	
   472                           
   473                           	psect	text3
   474  00DC                     __ptext3:	
   475 ;; *************** function _conf_timer0 *****************
   476 ;; Defined at:
   477 ;;		line 194 in file "main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;		None               void
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   491 ;;      Params:         0       0       0       0
   492 ;;      Locals:         0       0       0       0
   493 ;;      Temps:          0       0       0       0
   494 ;;      Totals:         0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    1
   498 ;; This function calls:
   499 ;;		Nothing
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _conf_timer0
   507  00DC                     _conf_timer0:	
   508                           
   509                           ;main.c: 195: OPTION_REGbits.T0CS = 0;
   510                           
   511                           ;incstack = 0
   512                           ; Regs used in _conf_timer0: [wreg+status,2+status,0]
   513  00DC  1683               	bsf	3,5	;RP0=1, select bank1
   514  00DD  1303               	bcf	3,6	;RP1=0, select bank1
   515  00DE  1281               	bcf	1,5	;volatile
   516                           
   517                           ;main.c: 196: OPTION_REGbits.PSA = 0;
   518  00DF  1181               	bcf	1,3	;volatile
   519                           
   520                           ;main.c: 198: OPTION_REGbits.PS = 0x00;
   521  00E0  30F8               	movlw	-8
   522  00E1  0581               	andwf	1,f	;volatile
   523                           
   524                           ;main.c: 202: TMR0 = 206;
   525  00E2  30CE               	movlw	206
   526  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   527  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   528  00E5  0081               	movwf	1	;volatile
   529                           
   530                           ;main.c: 204: INTCONbits.T0IF = 0;
   531  00E6  110B               	bcf	11,2	;volatile
   532                           
   533                           ;main.c: 205: INTCONbits.T0IE = 1;
   534  00E7  168B               	bsf	11,5	;volatile
   535  00E8  0008               	return
   536  00E9                     __end_of_conf_timer0:	
   537                           
   538                           	psect	text4
   539  00C7                     __ptext4:	
   540 ;; *************** function _conf_ao_barra *****************
   541 ;; Defined at:
   542 ;;		line 167 in file "main.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;		None               void
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0, pclath, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   556 ;;      Params:         0       0       0       0
   557 ;;      Locals:         0       0       0       0
   558 ;;      Temps:          0       0       0       0
   559 ;;      Totals:         0       0       0       0
   560 ;;Total ram usage:        0 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; Hardware stack levels required when called:    2
   563 ;; This function calls:
   564 ;;		_conf_mod_ref
   565 ;; This function is called by:
   566 ;;		_main
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _conf_ao_barra
   572  00C7                     _conf_ao_barra:	
   573                           
   574                           ;main.c: 168: TRISAbits.TRISA0 = 1;
   575                           
   576                           ;incstack = 0
   577                           ; Regs used in _conf_ao_barra: [wreg+status,2+status,0+pclath+cstack]
   578  00C7  1683               	bsf	3,5	;RP0=1, select bank1
   579  00C8  1303               	bcf	3,6	;RP1=0, select bank1
   580  00C9  1405               	bsf	5,0	;volatile
   581                           
   582                           ;main.c: 169: TRISAbits.TRISA1 = 1;
   583  00CA  1485               	bsf	5,1	;volatile
   584                           
   585                           ;main.c: 174: CMCONbits.C1INV = 1;
   586  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   587  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   588  00CD  161F               	bsf	31,4	;volatile
   589                           
   590                           ;main.c: 176: CMCONbits.CIS = 0x00;
   591  00CE  119F               	bcf	31,3	;volatile
   592                           
   593                           ;main.c: 177: CMCONbits.CM = 0x02;
   594  00CF  081F               	movf	31,w	;volatile
   595  00D0  39F8               	andlw	-8
   596  00D1  3802               	iorlw	2
   597  00D2  009F               	movwf	31	;volatile
   598                           
   599                           ;main.c: 179: conf_mod_ref();
   600  00D3  20E9               	fcall	_conf_mod_ref
   601                           
   602                           ;main.c: 181: PIR1bits.CMIF = 0;
   603  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   604  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   605  00D6  130C               	bcf	12,6	;volatile
   606                           
   607                           ;main.c: 182: PIE1bits.CMIE = 1;
   608  00D7  1683               	bsf	3,5	;RP0=1, select bank1
   609  00D8  1303               	bcf	3,6	;RP1=0, select bank1
   610  00D9  170C               	bsf	12,6	;volatile
   611                           
   612                           ;main.c: 183: INTCONbits.PEIE = 1;
   613  00DA  170B               	bsf	11,6	;volatile
   614  00DB  0008               	return
   615  00DC                     __end_of_conf_ao_barra:	
   616                           
   617                           	psect	text5
   618  00E9                     __ptext5:	
   619 ;; *************** function _conf_mod_ref *****************
   620 ;; Defined at:
   621 ;;		line 154 in file "main.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;		None               void
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   635 ;;      Params:         0       0       0       0
   636 ;;      Locals:         0       0       0       0
   637 ;;      Temps:          0       0       0       0
   638 ;;      Totals:         0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    1
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		_conf_ao_barra
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           
   650                           ;psect for function _conf_mod_ref
   651  00E9                     _conf_mod_ref:	
   652                           
   653                           ;main.c: 155: VRCONbits.VREN = 1;
   654                           
   655                           ;incstack = 0
   656                           ; Regs used in _conf_mod_ref: [wreg+status,2+status,0]
   657  00E9  1683               	bsf	3,5	;RP0=1, select bank1
   658  00EA  1303               	bcf	3,6	;RP1=0, select bank1
   659  00EB  179F               	bsf	31,7	;volatile
   660                           
   661                           ;main.c: 156: VRCONbits.VROE = 1;
   662  00EC  171F               	bsf	31,6	;volatile
   663                           
   664                           ;main.c: 157: VRCONbits.VRR = 1;
   665  00ED  169F               	bsf	31,5	;volatile
   666                           
   667                           ;main.c: 159: {VRCONbits.VR = 8;};
   668  00EE  081F               	movf	31,w	;volatile
   669  00EF  39F0               	andlw	-16
   670  00F0  3808               	iorlw	8
   671  00F1  009F               	movwf	31	;volatile
   672  00F2  0008               	return
   673  00F3                     __end_of_conf_mod_ref:	
   674                           
   675                           	psect	text6
   676  0016                     __ptext6:	
   677 ;; *************** function _isr *****************
   678 ;; Defined at:
   679 ;;		line 211 in file "main.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;		None               void
   686 ;; Registers used:
   687 ;;		wreg, status,2, status,0
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   693 ;;      Params:         0       0       0       0
   694 ;;      Locals:         0       0       0       0
   695 ;;      Temps:          5       0       0       0
   696 ;;      Totals:         5       0       0       0
   697 ;;Total ram usage:        5 bytes
   698 ;; Hardware stack levels used:    1
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		Interrupt level 1
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           
   707                           ;psect for function _isr
   708  0016                     _isr:	
   709                           
   710                           ;main.c: 212: static unsigned int tempo1 = 0;
   711                           ;main.c: 214: if (T0IF == 1) {
   712  0016  1D0B               	btfss	11,2	;volatile
   713  0017  2849               	goto	i1l69
   714                           
   715                           ;main.c: 216: TMR0 = 206;
   716  0018  30CE               	movlw	206
   717  0019  0081               	movwf	1	;volatile
   718                           
   719                           ;main.c: 218: if (tempo1 == 300) {
   720  001A  3001               	movlw	1
   721  001B  0676               	xorwf	isr@tempo1+1,w
   722  001C  1D03               	skipz
   723  001D  2820               	goto	u7_25
   724  001E  302C               	movlw	44
   725  001F  0675               	xorwf	isr@tempo1,w
   726  0020                     u7_25:	
   727  0020  1D03               	skipz
   728  0021  2841               	goto	i1l612
   729                           
   730                           ;main.c: 221: tempo1 = 0;
   731  0022  01F5               	clrf	isr@tempo1
   732  0023  01F6               	clrf	isr@tempo1+1
   733                           
   734                           ;main.c: 224: if ((flag & (1<<0x02))) {
   735  0024  1D77               	btfss	_flag,2	;volatile
   736  0025  2835               	goto	i1l604
   737                           
   738                           ;main.c: 225: {VRCONbits.VR = 8;};
   739  0026  1683               	bsf	3,5	;RP0=1, select bank1
   740  0027  1303               	bcf	3,6	;RP1=0, select bank1
   741  0028  081F               	movf	31,w	;volatile
   742  0029  39F0               	andlw	-16
   743  002A  3808               	iorlw	8
   744  002B  009F               	movwf	31	;volatile
   745                           
   746                           ;main.c: 226: C1INV = 1;
   747  002C  1283               	bcf	3,5	;RP0=0, select bank0
   748  002D  1303               	bcf	3,6	;RP1=0, select bank0
   749  002E  161F               	bsf	31,4	;volatile
   750                           
   751                           ;main.c: 227: CMIF = 0;
   752  002F  130C               	bcf	12,6	;volatile
   753                           
   754                           ;main.c: 228: {flag &= ~(1<<0x02);};
   755  0030  30FB               	movlw	251
   756  0031  00F0               	movwf	??_isr
   757  0032  0870               	movf	??_isr,w
   758  0033  05F7               	andwf	_flag,f	;volatile
   759                           
   760                           ;main.c: 229: } else {
   761  0034  2847               	goto	i1l614
   762  0035                     i1l604:	
   763                           
   764                           ;main.c: 230: {VRCONbits.VR = 5;};
   765  0035  1683               	bsf	3,5	;RP0=1, select bank1
   766  0036  1303               	bcf	3,6	;RP1=0, select bank1
   767  0037  081F               	movf	31,w	;volatile
   768  0038  39F0               	andlw	-16
   769  0039  3805               	iorlw	5
   770  003A  009F               	movwf	31	;volatile
   771                           
   772                           ;main.c: 231: C1INV = 0;
   773  003B  1283               	bcf	3,5	;RP0=0, select bank0
   774  003C  1303               	bcf	3,6	;RP1=0, select bank0
   775  003D  121F               	bcf	31,4	;volatile
   776                           
   777                           ;main.c: 232: CMIF = 0;
   778  003E  130C               	bcf	12,6	;volatile
   779                           
   780                           ;main.c: 233: {flag |= (1<<0x02);};
   781  003F  1577               	bsf	_flag,2	;volatile
   782                           
   783                           ;main.c: 234: }
   784                           ;main.c: 236: } else {
   785  0040  2847               	goto	i1l614
   786  0041                     i1l612:	
   787                           
   788                           ;main.c: 237: tempo1++;
   789  0041  3001               	movlw	1
   790  0042  07F5               	addwf	isr@tempo1,f
   791  0043  1803               	skipnc
   792  0044  0AF6               	incf	isr@tempo1+1,f
   793  0045  3000               	movlw	0
   794  0046  07F6               	addwf	isr@tempo1+1,f
   795  0047                     i1l614:	
   796                           
   797                           ;main.c: 238: }
   798                           ;main.c: 240: T0IF = 0;
   799  0047  110B               	bcf	11,2	;volatile
   800                           
   801                           ;main.c: 242: } else if (CMIF == 1) {
   802  0048  284E               	goto	i1l77
   803  0049                     i1l69:	
   804  0049  1F0C               	btfss	12,6	;volatile
   805  004A  284E               	goto	i1l77
   806                           
   807                           ;main.c: 246: if (C1OUT == 1) {
   808  004B  1B1F               	btfsc	31,6	;volatile
   809                           
   810                           ;main.c: 252: {RB2 = 0;};
   811  004C  1106               	bcf	6,2	;volatile
   812                           
   813                           ;main.c: 253: }
   814                           ;main.c: 255: CMIF = 0;
   815  004D  130C               	bcf	12,6	;volatile
   816  004E                     i1l77:	
   817  004E  0874               	movf	??_isr+4,w
   818  004F  00FF               	movwf	127
   819  0050  0873               	movf	??_isr+3,w
   820  0051  008A               	movwf	10
   821  0052  0872               	movf	??_isr+2,w
   822  0053  0084               	movwf	4
   823  0054  0E71               	swapf	(??_isr+1)^(0+-128),w
   824  0055  0083               	movwf	3
   825  0056  0EFE               	swapf	126,f
   826  0057  0E7E               	swapf	126,w
   827  0058  0009               	retfie
   828  0059                     __end_of_isr:	
   829  007E                     btemp	set	126	;btemp
   830  007E                     wtemp	set	126
   831  007E                     wtemp0	set	126
   832  0080                     wtemp1	set	128
   833  0082                     wtemp2	set	130
   834  0084                     wtemp3	set	132
   835  0086                     wtemp4	set	134
   836  0088                     wtemp5	set	136
   837  007F                     wtemp6	set	127
   838  007E                     ttemp	set	126
   839  007E                     ttemp0	set	126
   840  0081                     ttemp1	set	129
   841  0084                     ttemp2	set	132
   842  0087                     ttemp3	set	135
   843  007F                     ttemp4	set	127
   844  007E                     ltemp	set	126
   845  007E                     ltemp0	set	126
   846  0082                     ltemp1	set	130
   847  0086                     ltemp2	set	134
   848  0080                     ltemp3	set	128
   849                           
   850                           	psect	intentry
   851  0004                     __pintentry:	
   852                           ;incstack = 0
   853                           ; Regs used in _isr: [wreg+status,2+status,0]
   854                           
   855  0004                     interrupt_function:	
   856  007E                     saved_w	set	btemp
   857  0004  00FE               	movwf	btemp
   858  0005  0E03               	swapf	3,w
   859  0006  00F1               	movwf	??_isr+1
   860  0007  0804               	movf	4,w
   861  0008  00F2               	movwf	??_isr+2
   862  0009  080A               	movf	10,w
   863  000A  00F3               	movwf	??_isr+3
   864  000B  1283               	bcf	3,5	;RP0=0, select bank0
   865  000C  1303               	bcf	3,6	;RP1=0, select bank0
   866  000D  087F               	movf	btemp+1,w
   867  000E  00F4               	movwf	??_isr+4
   868  000F  2816               	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      5       5
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_controle_mosfet

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 BANK0      3     3      0
                      _conf_ao_barra
                        _conf_timer0
                    _controle_mosfet
                       _monitor_fase
 ---------------------------------------------------------------------------------
 (1) _monitor_fase                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _controle_mosfet                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _conf_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_ao_barra                                        0     0      0       0
                       _conf_mod_ref
 ---------------------------------------------------------------------------------
 (2) _conf_mod_ref                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conf_ao_barra
     _conf_mod_ref
   _conf_timer0
   _controle_mosfet
   _monitor_fase

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      5       5       3        6.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       D      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Sep 03 12:30:12 2014

             __CFG_CP$OFF 0000                        l80 0092                       l702 009E  
                     _GIE 005F                       _RB2 0032                       _RA4 002C  
                     _RB3 0033                       _RB4 0034                       _RA6 002E  
                     _RB5 0035                       _RB6 0036                       u157 007C  
                     u167 0088                       u177 00AA              __CFG_CPD$OFF 0000  
                     u187 00B4                       u197 00BE                       _isr 0016  
                     fsr0 0004              __CFG_LVP$OFF 0000  __size_of_controle_mosfet 0033  
                    ?_isr 0070                      _CMIF 0066                      _T0IF 005A  
                    i1l77 004E                      i1l69 0049                      _TMR0 0001  
          ??_conf_mod_ref 0075                      u7_25 0020                      _flag 0077  
                    _main 0059                      btemp 007E             __CFG_BOREN$ON 0000  
                    ltemp 007E                      start 0010                      ttemp 007E  
                    wtemp 007E             __CFG_MCLRE$ON 0000           ??_conf_ao_barra 0075  
                   ??_isr 0070                     _C1INV 00FC                     _C1OUT 00FE  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     i1l604 0035  
                   i1l612 0041                     i1l614 0047             __CFG_PWRTE$ON 0000  
                   pclath 000A                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
         __initialization 0011              __end_of_main 0094                    ??_main 0022  
       ??_controle_mosfet 0020      __size_of_conf_timer0 000D      __end_of_conf_mod_ref 00F3  
                  saved_w 007E   __end_of__initialization 0014            __pcstackCOMMON 0070  
          _OPTION_REGbits 0081                __pmaintext 0059                __pintentry 0004  
           ?_monitor_fase 0070     __size_of_conf_mod_ref 000A     __end_of_conf_ao_barra 00DC  
               _CMCONbits 001F                   __ptext0 0000                   __ptext1 00F3  
                 __ptext2 0094                   __ptext3 00DC                   __ptext4 00C7  
                 __ptext5 00E9                   __ptext6 0016              __size_of_isr 0043  
         _controle_mosfet 0094      end_of_initialization 0014            ??_monitor_fase 0075  
            _conf_mod_ref 00E9                 _TRISAbits 0085                 _TRISBbits 0086  
               _VRCONbits 009F             ??_conf_timer0 0075   __end_of_controle_mosfet 00C7  
     start_initialization 0011               __end_of_isr 0059       __end_of_conf_timer0 00E9  
    __end_of_monitor_fase 00FA               __pbssCOMMON 0075                 ___latbits 0000  
           __pcstackBANK0 0020          ?_controle_mosfet 0070         interrupt_function 0004  
                _PIE1bits 008C               _conf_timer0 00DC                  _PIR1bits 000C  
  __size_of_conf_ao_barra 0015                 isr@tempo1 0075     __size_of_monitor_fase 0007  
            _monitor_fase 00F3             __size_of_main 003B             _conf_ao_barra 00C7  
              _INTCONbits 000B                  intlevel1 0000            ?_conf_ao_barra 0070  
      __CFG_FOSC$INTOSCIO 0000             ?_conf_mod_ref 0070              ?_conf_timer0 0070  
